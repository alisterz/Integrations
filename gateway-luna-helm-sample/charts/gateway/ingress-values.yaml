service:
  # Service Type, ClusterIP, NodePort, LoadBalancer
  type: ClusterIP
  ports:
    - name: https
      internal: 8443
      external: 8443
    - name: management
      internal: 9443
      external: 9443
  # Additional Service annotations, the example below shows configuration for an internal load balancer on GCP
  # See the docs for more ==> https://kubernetes.io/docs/concepts/services-networking/service/
  annotations: {}

# This project does not currently support Google's GCE controller.
# The default way to expose the Gateway is via L4 Load Balancer because it goes far beyond the HTTP(S) limitation ingress currently imposes
# Certificates are not created here, please specify an existing cert secret to use if enabling TLS
ingress:
  # Set to true to create ingress object
  enabled: true
  class: nginx
  # Ingress annotations
  annotations:
  # Ingress class
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # uncomment the following to enable session affinity
    # nginx.ingress.kubernetes.io/affinity: "cookie"
    # nginx.ingress.kubernetes.io/session-cookie-name: "route"
    # nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"

  # When the ingress is enabled, a host pointing to this will be created
  # By default clusterHostname is used, only set this if you want to use a different host like my.test.app.net
  hostname:
  ## The port that you want to route to via ingress. This needs to be available via service.ports.
  port: https
  ## Define additional hostnames and ports as key-value pairs.
  additionalHostnamesAndPorts:
  #  managementhost.domain: management
  ## Enable TLS configuration for the hostname defined at ingress.hostname/clusterHostname parameter
  tls: false
  secretName:
